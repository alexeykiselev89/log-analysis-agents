from typing import List
from app.agents.error_classifier import ClassifiedError

class PromptBuilder:
    @staticmethod
    def build_prompt(classified_errors: List[ClassifiedError]) -> str:
        prompt_intro = (
            "–¢—ã –≤—ã—Å—Ç—É–ø–∞–µ—à—å –≤ —Ä–æ–ª–∏ AI-—ç–∫—Å–ø–µ—Ä—Ç–∞ –ø–æ –∞–Ω–∞–ª–∏–∑—É –ª–æ–≥–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.\n"
            "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π 10 –æ—à–∏–±–æ–∫ –Ω–∏–∂–µ. –î–ª—è –∫–∞–∂–¥–æ–π –∏–∑ –Ω–∏—Ö:\n"
            "- –û–ø—Ä–µ–¥–µ–ª–∏ –µ—ë –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç—å: –≤—ã—Å–æ–∫–∞—è / —Å—Ä–µ–¥–Ω—è—è / –Ω–∏–∑–∫–∞—è\n"
            "- –°—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π –∫—Ä–∞—Ç–∫—É—é –ø—Ä–∏—á–∏–Ω—É –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è\n"
            "- –î–∞–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è\n\n"
            "–í–∞–∂–Ω–æ: —Å—Ç—Ä–æ–≥–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –≤—Å–µ 10 –æ—à–∏–±–æ–∫!\n"
            "–û—Ç–≤–µ—Ç –≤–µ—Ä–Ω–∏ —Å—Ç—Ä–æ–≥–æ –≤ JSON-–º–∞—Å—Å–∏–≤–µ —Ç–∞–∫–æ–≥–æ –≤–∏–¥–∞:\n"
            "[\n"
            "  {\n"
            '    "message": "–û–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏",\n'
            '    "frequency": N,\n'
            '    "criticality": "–Ω–∏–∑–∫–∞—è / —Å—Ä–µ–¥–Ω—è—è / –≤—ã—Å–æ–∫–∞—è",\n'
            '    "recommendation": "–ß—Ç–æ —Å–¥–µ–ª–∞—Ç—å"\n'
            "  },\n"
            "  ... (–µ—â—ë 9 —à—Ç—É–∫)\n"
            "]\n\n"
            "–û—à–∏–±–∫–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:\n"
        )

        # üîº —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —á–∞—Å—Ç–æ—Ç–µ, –±–µ—Ä–µ–º —Ç–æ–ø-10
        top_errors = sorted(classified_errors, key=lambda x: x.frequency, reverse=True)[:10]

        logs_summary = ""
        for error in top_errors:
            logs_summary += (
                f"- –°–æ–æ–±—â–µ–Ω–∏–µ: {error.message}\n"
                f"  –ß–∞—Å—Ç–æ—Ç–∞: {error.frequency}\n"
                f"  –£—Ä–æ–≤–µ–Ω—å: {error.level}\n"
                f"  –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç—å: {error.criticality}\n\n"
            )

        return prompt_intro + logs_summary
