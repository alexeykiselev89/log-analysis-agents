from typing import List
from app.agents.error_classifier import ClassifiedError

class PromptBuilder:
    @staticmethod
    def build_prompt(classified_errors: List[ClassifiedError]) -> str:
        prompt_intro = (
            "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–ª–µ–¥—É—é—â–∏–π –ª–æ–≥ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. "
            "–û–ø—Ä–µ–¥–µ–ª–∏ –æ—à–∏–±–∫–∏ –∏ —Å–±–æ–∏ –≤ —Ä–∞–±–æ—Ç–µ, –∏—Ö –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã, "
            "–ø—Ä–µ–¥–ª–æ–∂–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è, –æ—Ü–µ–Ω–∏ –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç—å –∫–∞–∂–¥–æ–π –ø—Ä–æ–±–ª–µ–º—ã.\n\n"
            "–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞: JSON —Å –ø–æ–ª—è–º–∏:\n"
            "[\n"
            "  {\n"
            '    "message": "–û–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏",\n'
            '    "frequency": N,\n'
            '    "criticality": "–Ω–∏–∑–∫–∞—è / —Å—Ä–µ–¥–Ω—è—è / –≤—ã—Å–æ–∫–∞—è",\n'
            '    "recommendation": "–ß—Ç–æ —Å–¥–µ–ª–∞—Ç—å"\n'
            "  }\n"
            "]\n\n"
            "–õ–æ–≥–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ (—Ç–æ–ø 5 –æ—à–∏–±–æ–∫):\n"
        )

        # üîº —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —á–∞—Å—Ç–æ—Ç–µ (frequency), –±–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ —Ç–æ–ø-5
        top_errors = sorted(classified_errors, key=lambda x: x.frequency, reverse=True)[:5]

        logs_summary = ""
        for error in top_errors:
            logs_summary += (
                f"- –°–æ–æ–±—â–µ–Ω–∏–µ: {error.message}\n"
                f"  –ß–∞—Å—Ç–æ—Ç–∞: {error.frequency}\n"
                f"  –£—Ä–æ–≤–µ–Ω—å: {error.level}\n"
                f"  –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç—å: {error.criticality}\n\n"
            )

        return prompt_intro + logs_summary
